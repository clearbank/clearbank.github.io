{
  "openapi": "3.0.1",
  "info": {
    "title": "ClearBank.Chaps.RtgsPortalManager.Container",
    "version": "1.0-ChapsSim"
  },
  "paths": {
    "/inbound-payment-simulation/chaps/v1/customer-payments": {
      "post": {
        "tags": [
          "ExternalInboundCustomerPaymentsSimulationV1"
        ],
        "summary": "Define a CHAPS payment to be received by an account in sim.",
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated inbound CHAPS payment, so that you will have a payment available to return. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ParametersOpenapi_Authorization"
          },
          {
            "$ref": "#/components/parameters/ParametersOpenapi_DigitalSignature"
          },
          {
            "$ref": "#/components/parameters/ParametersOpenapi_RequestIdentifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSimCreatedResponseDtoV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSimCreatedResponseDtoV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSimCreatedResponseDtoV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/inbound-payment-simulation/chaps/v1/institution-payments": {
      "post": {
        "tags": [
          "ExternalInboundInstitutionPaymentsSimulationV1"
        ],
        "summary": "Define a CHAPS bank-to-bank payment to be received by an account in sim.",
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated inbound bank-to-bank payment. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "operationId": "CreateInboundInstitutionPayment-v1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/inbound-payment-simulation/chaps/v1/return-payments": {
      "post": {
        "tags": [
          "ExternalInboundReturnPaymentsSimulationV1"
        ],
        "summary": "Define a returned CHAPS payment to be received by an account in sim.",
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated returned CHAPS payment. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "operationId": "CreateInboundReturnPayment-v1",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "HeadersOpenapi_CorrelationIdentifier": {
        "description": "A unique identifier generated by ClearBank for the request. It is recommended you store this response header for debugging purposes",
        "schema": {
          "$ref": "#/components/schemas/ApiHeadersSchema_CorrelationIdentifierType"
        }
      }
    },
    "parameters": {
      "ParametersOpenapi_Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Your API token retrieved from the portal",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiHeadersSchema_AuthorizationType"
        }
      },
      "ParametersOpenapi_DigitalSignature": {
        "name": "DigitalSignature",
        "in": "header",
        "description": "The hash of the request body signed with your private key",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiHeadersSchema_DigitalSignatureType"
        }
      },
      "ParametersOpenapi_RequestIdentifier": {
        "name": "X-Request-Id",
        "in": "header",
        "description": "A unique identifier that provides an idempotency check. This must be unique for any subsequent requests sent for at least 24 hours after the initial request was sent.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiHeadersSchema_RequestIdentifierType"
        }
      }
    },
    "schemas": {
      "ApiHeadersSchema_AuthorizationType": {
        "description": "Authorization header restricted to Bearer token only",
        "type": "string",
        "pattern": "^Bearer +.+"
      },
      "ApiHeadersSchema_DigitalSignatureType": {
        "description": "The digital signature generated by the API consumer",
        "type": "string"
      },
      "ApiHeadersSchema_RequestIdentifierType": {
        "description": "The request identifier supplied by the API consumer",
        "type": "string"
      },
      "ApiHeadersSchema_CorrelationIdentifierType": {
        "description": "A unique identifier generated by ClearBank®",
        "type": "string"
      },
      "AccountIdentificationDtoV1": {
        "type": "object",
        "additionalProperties": false,
        "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
        "properties": {
          "iban": {
            "description": "International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions.",
            "type": "string",
            "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
          },
          "schemeName": {
            "description": "Qualifier for scheme name that identifies an organisation provided as either a code or free form text.\nShould be populated based on instructions published on ClearBank Developer Portal or supplied in onboarding guide.\n",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "BBan",
              "SortCodeAccountNumber"
            ]
          },
          "identification": {
            "description": "Identification assigned by an institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        }
      },
      "AccountIdentificationIbanDtoV1": {
        "required": [
          "iban"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          }
        ],
        "properties": {
          "iban": {
            "description": "International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions.",
            "type": "string",
            "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
          }
        },
        "additionalProperties": false
      },
      "AccountIdentificationOtherDtoV1": {
        "required": [
          "scheme"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          }
        ],
        "properties": {
          "schemeName": {
            "description": "Qualifier for scheme name that identifies an organisation provided as either a code or free form text.\nShould be populated based on instructions published on ClearBank Developer Portal or supplied in onboarding guide.\n",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "BBan",
              "SortCodeAccountNumber"
            ]
          },
          "identification": {
            "description": "Identification assigned by an institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        },
        "additionalProperties": false
      },
      "AddressDtoV1": {
        "type": "object",
        "properties": {
          "streetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "buildingNumber": {
            "description": "Number that identifies the position of a building on a street.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          },
          "buildingName": {
            "description": "Name of the building or house.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "townName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "country": {
            "description": "Nation with its own government.",
            "type": "string",
            "pattern": "[A-Z]{2,2}"
          },
          "postCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          }
        },
        "additionalProperties": false
      },
      "CreateInboundCustomerPaymentDtoV1": {
        "required": [
          "creditor",
          "creditorAccount",
          "creditorBic",
          "debtor",
          "debtorAccount",
          "debtorBic",
          "endToEndIdentification",
          "instructedAmount",
          "instructionIdentification"
        ],
        "type": "object",
        "properties": {
          "instructionIdentification": {
            "description": "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.\n\nUsage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "endToEndIdentification": {
            "description": "Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\n\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\n\nUsage: In case there are technical limitations to pass on multiple references, the end-to-end identification must be passed on throughout the entire end-to-end chain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "instructedAmount": {
            "description": "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.",
            "type": "object",
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "number"
              },
              "currency": {
                "type": "string",
                "pattern": "^[A-Z]{3}$"
              }
            }
          },
          "debtorBic": {
            "minLength": 1,
            "description": "Valid BIC for the debtor account.",
            "type": "string"
          },
          "debtorAccount": {
            "type": "object",
            "additionalProperties": false,
            "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction. You need to include EITHER the iban field OR the schemeName and identification fields in this object.",
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          },
          "debtor": {
            "required": [
              "name",
              "postalAddress"
            ],
            "type": "object",
            "properties": {
              "name": {
                "minLength": 1,
                "type": "string"
              },
              "postalAddress": {
                "$ref": "#/components/schemas/PartyAddressDetailsDtoV1"
              }
            },
            "additionalProperties": false,
            "description": "Party that owes an amount of money to the (ultimate) creditor."
          },
          "creditorBic": {
            "minLength": 1,
            "description": "Valid BIC for the creditor account.",
            "type": "string"
          },
          "creditorAccount": {
            "type": "object",
            "additionalProperties": false,
            "description": "Unambiguous identification of the account of the creditor to which a credit entry will be made as a result of the transaction. You need to include EITHER the iban field OR the schemeName and identification fields in this object.",
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          },
          "creditor": {
            "required": [
              "name",
              "postalAddress"
            ],
            "type": "object",
            "properties": {
              "name": {
                "minLength": 1,
                "type": "string"
              },
              "postalAddress": {
                "$ref": "#/components/schemas/PartyAddressDetailsDtoV1"
              }
            },
            "additionalProperties": false,
            "description": "Party that is owed an amount of money by the (ultimate) debtor."
          },
          "purpose": {
            "description": "Underlying reason for the payment transaction, as published in an external purpose code list.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "Deposit",
              "IntraCompanyPayment",
              "IntraPartyPayment",
              "AgriculturalTransfer",
              "CommercialPayment",
              "PurchaseSaleOfGoodsAndServices",
              "SupplierPayment",
              "CharityPayment",
              "CompensationPayment",
              "PropertyLoanRepayment",
              "PropertyLoanSettlement",
              "PaymentOfInsuranceClaim",
              "LoanRepayment",
              "TradeSettlementPayment",
              "PaymentOfFees",
              "Gift",
              "InvoicePayment",
              "ForeignExchange",
              "Savings",
              "TaxPayment",
              "Utilities",
              "LotteryPayment",
              "PropertyCompletionPayment",
              "PropertyDeposit",
              "PropertyLoanDisbursement",
              "PropertyLoanRefinancing"
            ]
          },
          "categoryPurpose": {
            "description": "Category purpose, in a proprietary form.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "TradeSettlementPayment",
              "PersonToPersonPayment",
              "GovernmentPayment",
              "IntraCompanyPayment",
              "Loan",
              "OtherPayment",
              "SupplierPayment",
              "TaxPayment",
              "Trade",
              "TreasuryPayment"
            ]
          },
          "remittanceInformation": {
            "type": "object",
            "properties": {
              "creditorReferenceInformation": {
                "x-flattened-from-source-iso-type": true,
                "x-source-iso-type-name": "CreditorReferenceType2",
                "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\n\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\n\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
                "type": "string",
                "minLength": 1,
                "maxLength": 35
              }
            },
            "additionalProperties": false,
            "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
          }
        },
        "additionalProperties": false
      },
      "CreateInboundInstitutionPaymentDtoV1": {
        "required": [
          "creditor",
          "creditorAccount",
          "creditorBic",
          "debtor",
          "debtorAccount",
          "debtorBic",
          "endToEndIdentification",
          "instructedAmount",
          "instructionIdentification"
        ],
        "type": "object",
        "properties": {
          "instructionIdentification": {
            "description": "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.\n\nUsage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "endToEndIdentification": {
            "description": "Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\n\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\n\nUsage: In case there are technical limitations to pass on multiple references, the end-to-end identification must be passed on throughout the entire end-to-end chain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "instructedAmount": {
            "description": "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.",
            "type": "object",
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "number"
              },
              "currency": {
                "type": "string",
                "pattern": "^[A-Z]{3}$"
              }
            }
          },
          "debtorAccount": {
            "type": "object",
            "additionalProperties": false,
            "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction. You need to include EITHER the iban field OR the schemeName and identification fields in this object.",
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          },
          "debtorBic": {
            "minLength": 1,
            "description": "Valid BIC for the debtor account.",
            "type": "string"
          },
          "debtor": {
            "required": [
              "name",
              "postalAddress"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name by which a party is known and which is usually used to identify that party.",
                "type": "string",
                "minLength": 1,
                "maxLength": 140
              },
              "postalAddress": {
                "required": [
                  "country",
                  "postCode",
                  "townName"
                ],
                "type": "object",
                "properties": {
                  "buildingNumber": {
                    "description": "Number that identifies the position of a building on a street.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "buildingName": {
                    "description": "Name of the building or house.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                  },
                  "streetName": {
                    "description": "Name of a street or thoroughfare.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70
                  },
                  "townName": {
                    "description": "Name of a built-up area, with defined boundaries, and a local government.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                  },
                  "country": {
                    "description": "Nation with its own government.",
                    "type": "string",
                    "pattern": "[A-Z]{2,2}"
                  },
                  "postCode": {
                    "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "description": "Party that owes an amount of money to the (ultimate) creditor."
          },
          "creditorBic": {
            "minLength": 1,
            "description": "Valid BIC for the creditor account.",
            "type": "string"
          },
          "creditorAccount": {
            "type": "object",
            "additionalProperties": false,
            "description": "Unambiguous identification of the account of the creditor to which a credit entry will be made as a result of the transaction. You need to include EITHER the iban field OR the schemeName and identification fields in this object.",
            "$ref": "#/components/schemas/AccountIdentificationDtoV1"
          },
          "creditor": {
            "required": [
              "name",
              "postalAddress"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name by which a party is known and which is usually used to identify that party.",
                "type": "string",
                "minLength": 1,
                "maxLength": 140
              },
              "postalAddress": {
                "required": [
                  "country",
                  "postCode",
                  "townName"
                ],
                "type": "object",
                "properties": {
                  "buildingNumber": {
                    "description": "Number that identifies the position of a building on a street.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "buildingName": {
                    "description": "Name of the building or house.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                  },
                  "streetName": {
                    "description": "Name of a street or thoroughfare.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70
                  },
                  "townName": {
                    "description": "Name of a built-up area, with defined boundaries, and a local government.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 35
                  },
                  "country": {
                    "description": "Nation with its own government.",
                    "type": "string",
                    "pattern": "[A-Z]{2,2}"
                  },
                  "postCode": {
                    "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "description": "Party that owes an amount of money to the (ultimate) creditor."
          },
          "purpose": {
            "description": "Underlying reason for the payment transaction, as published in an external purpose code list.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "Deposit",
              "IntraCompanyPayment",
              "IntraPartyPayment",
              "AgriculturalTransfer",
              "CommercialPayment",
              "PurchaseSaleOfGoodsAndServices",
              "SupplierPayment",
              "CharityPayment",
              "CompensationPayment",
              "PropertyLoanRepayment",
              "PropertyLoanSettlement",
              "PaymentOfInsuranceClaim",
              "LoanRepayment",
              "TradeSettlementPayment",
              "PaymentOfFees",
              "Gift",
              "InvoicePayment",
              "ForeignExchange",
              "Savings",
              "TaxPayment",
              "Utilities",
              "LotteryPayment",
              "PropertyCompletionPayment",
              "PropertyDeposit",
              "PropertyLoanDisbursement",
              "PropertyLoanRefinancing"
            ]
          },
          "categoryPurpose": {
            "description": "Category purpose, in a proprietary form.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "TradeSettlementPayment",
              "PersonToPersonPayment",
              "GovernmentPayment",
              "IntraCompanyPayment",
              "Loan",
              "OtherPayment",
              "SupplierPayment",
              "TaxPayment",
              "Trade",
              "TreasuryPayment"
            ]
          },
          "remittanceInformation": {
            "type": "object",
            "properties": {
              "unstructured": {
                "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 140
              }
            },
            "additionalProperties": false,
            "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
          }
        },
        "additionalProperties": false
      },
      "CreateInboundReturnPaymentDtoV1": {
        "required": [
          "creditorBic",
          "debtorBic",
          "instructedAmount",
          "originalEndToEndIdentification",
          "originalInstructionIdentification",
          "originalReference",
          "originalUetr",
          "returnReasonCode"
        ],
        "type": "object",
        "properties": {
          "originalUetr": {
            "description": "Universally unique identifier to provide the original end-to-end reference of a payment transaction.",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
          },
          "returnReasonCode": {
            "enum": [
              "WrongAmount",
              "InconsistentWithEndCustomer",
              "MissingCreditorAddress",
              "UnrecognisedInitiatingParty",
              "UnknownEndCustomer",
              "FollowingCancellationRequest",
              "RefundRequestByEndCustomer"
            ],
            "type": "string"
          },
          "originalInstructionIdentification": {
            "description": "Unique identification, as assigned by the original instructing party for the original instructed party, to unambiguously identify the original instruction.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "originalEndToEndIdentification": {
            "description": "Unique identification, as assigned by the original initiating party, to unambiguously identify the original transaction.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "originalReference": {
            "minLength": 1,
            "type": "string"
          },
          "instructedAmount": {
            "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\r\n\r\nUsage: This amount has to be transported unchanged through the transaction chain.",
            "type": "object",
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "number"
              },
              "currency": {
                "type": "string",
                "pattern": "^[A-Z]{3}$"
              }
            }
          },
          "debtorName": {
            "description": "Name of the person or business who owns the debtor account.",
            "type": "string"
          },
          "debtorBic": {
            "minLength": 1,
            "description": "Valid BIC for the debtor account.",
            "type": "string"
          },
          "creditorName": {
            "type": "string",
            "description": "Name of the person or business who owns the creditor account."
          },
          "creditorBic": {
            "minLength": 1,
            "description": "Valid BIC for the creditor account.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InstructionAmountDtoV1": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$"
          }
        },
        "additionalProperties": false
      },
      "PartyAddressDetailsDtoV1": {
        "required": [
          "country",
          "postCode",
          "townName"
        ],
        "type": "object",
        "properties": {
          "buildingNumber": {
            "description": "Number that identifies the position of a building on a street.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          },
          "buildingName": {
            "description": "Name of the building or house.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "streetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "minLength": 1,
            "maxLength": 70
          },
          "townName": {
            "description": "Name of a built-up area, with defined boundaries, and a local government.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "country": {
            "description": "Nation with its own government.",
            "type": "string",
            "pattern": "[A-Z]{2,2}"
          },
          "postCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "type": "string",
            "minLength": 1,
            "maxLength": 16
          }
        },
        "additionalProperties": false
      },
      "PartyDetailsDtoV1": {
        "required": [
          "name",
          "postalAddress"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/PartyAddressDetailsDtoV1"
          }
        },
        "additionalProperties": false,
        "description": "Party that owes an amount of money to the (ultimate) creditor."
      },
      "PaymentSimCreatedResponseDtoV1": {
        "required": [
          "uetr"
        ],
        "type": "object",
        "properties": {
          "uetr": {
            "description": "Universally unique identifier to provide an end-to-end reference of a payment transaction.",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
          }
        },
        "additionalProperties": false
      },
      "PaymentCreatedResponseDtoV1": {
        "required": [
          "uetr"
        ],
        "type": "object",
        "properties": {
          "uetr": {
            "description": "Universally unique identifier to provide an end-to-end reference of a payment transaction.",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "description": "Properties of a given error",
        "type": "object",
        "required": [
          "type",
          "title"
        ],
        "properties": {
          "detail": {
            "description": "A human-readable description of the problem unique to the instance of the problem. The reader must be able to discern the cause of the problem from this information.\n",
            "type": "string"
          },
          "errors": {},
          "instance": {
            "description": "A URI that uniquely identifies the problem being reported. This value should be consistent and deterministic in order to promote automated processing when read in client software\n",
            "type": "string"
          },
          "status": {
            "description": "The HTTP response code returned by the API. This is returned to allow for processing by distributed software agents and MUST match that reported in the transport layer\n",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type that should not change between different occurrences of a given problem",
            "type": "string"
          },
          "type": {
            "description": "A URI that uniquely identifies the problem type being reported",
            "type": "string"
          }
        }
      },
      "StructuredRemittanceInformationDtoV1": {
        "type": "object",
        "properties": {
          "creditorReferenceInformation": {
            "x-flattened-from-source-iso-type": true,
            "x-source-iso-type-name": "CreditorReferenceType2",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\n\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\n\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        },
        "additionalProperties": false,
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
      }
    }
  }
}