{
  "openapi": "3.0.1",
  "info": {
    "title": "ClearBank.Chaps.RtgsPortalManager.Container",
    "version": "2.0-ChapsSim"
  },
  "paths": {
    "/inbound-payment-simulation/chaps/v2/customer-payments": {
      "post": {
        "tags": [
          "InboundSimulationV2"
        ],
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated inbound CHAPS payment, so that you will have a payment available to return. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "operationId": "CreateInboundCustomerPayment-v2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your API token, retrieved from the ClearBank portal.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DigitalSignature",
            "in": "header",
            "description": "Signed hash of the body of the request. The hash is signed by your private key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique identifier for the request; valid for 24 hours, max length 83.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundCustomerPaymentDtoV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/inbound-payment-simulation/chaps/v2/institution-payments": {
      "post": {
        "tags": [
          "InboundSimulationV2"
        ],
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated inbound bank-to-bank payment. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "operationId": "CreateInboundInstitutionPayment-v2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your API token, retrieved from the ClearBank portal.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DigitalSignature",
            "in": "header",
            "description": "Signed hash of the body of the request. The hash is signed by your private key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique identifier for the request; valid for 24 hours, max length 83.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundInstitutionPaymentDtoV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/inbound-payment-simulation/chaps/v2/return-payments": {
      "post": {
        "tags": [
          "InboundSimulationV2"
        ],
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simulated returned CHAPS payment. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.",
        "operationId": "CreateInboundReturnPayment-v2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your API token, retrieved from the ClearBank portal.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DigitalSignature",
            "in": "header",
            "description": "Signed hash of the body of the request. The hash is signed by your private key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique identifier for the request; valid for 24 hours, max length 83.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentDtoV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v2/inbound-payment-simulation/return-payment-simplified": {
      "post": {
        "tags": [
          "InboundSimulationV2"
        ],
        "description": "This endpoint exists to support your testing and development in our simulation environment. It does not apply to production. You can use it to send a simplified simulated returned CHAPS payment. Note that if this request is not successful because the payment details are incorrect, you will not receive a webhook.<br/><br/>If used repeatedly on the same outbound payment, this endpoint will continue to advise 200 responses for each request. You will not receive an error response. In the production environment, the expectation is that you will only receive a single pacs.004 return message for each outbound payment made.",
        "operationId": "CreateInboundReturnPaymentSimplified-v2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your API token, obtained from the ClearBank Portal.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DigitalSignature",
            "in": "header",
            "description": "Signed hash of the body of the request. The hash is signed by your private key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique identifier for the request; valid for 24 hours, max length 83.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentSimplifiedDtoV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentSimplifiedDtoV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentSimplifiedDtoV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInboundReturnPaymentSimplifiedDtoV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreatedResponseDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountIdentificationDtoV2": {
        "type": "object",
        "properties": {
          "identification": {
            "description": "Identification assigned by an institution, specifying an account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          }
        },
        "additionalProperties": false
      },
      "AccountIdentificationIbanDtoV2": {
        "required": [
          "iban"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountIdentificationDtoV2"
          }
        ],
        "properties": {
          "iban": {
            "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}",
            "maxLength": 34,
            "type": "string",
            "description": "International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions."
          }
        },
        "additionalProperties": false
      },
      "AccountIdentificationOtherDtoV2": {
        "required": [
          "identification",
          "schemeName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountIdentificationDtoV2"
          }
        ],
        "properties": {
          "schemeName": {
            "description": "Qualifier for scheme name that identifies an organisation provided as either a code or free form text.\nShould be populated based on instructions published on ClearBank Developer Portal or supplied in onboarding guide.\n",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "enum": [
              "BBan",
              "SortCodeAccountNumber"
            ]
          },
          "identification": {
            "description": "Information to identify an account.",
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateInboundCustomerPaymentDtoV2": {
        "required": [
          "categoryPurpose",
          "creditor",
          "creditorAccount",
          "debtor",
          "debtorAccount",
          "endToEndIdentification",
          "instructedAmount",
          "instructionIdentification",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "instructionIdentification": {
            "description": "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.",
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ !#$%&\\*=^_`\\{\\|\\}~\";<>@\\[\\\\\\]]+$",
            "example": "202509190123456",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "endToEndIdentification": {
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ ]+$",
            "example": "E2E202509190123456",
            "description": "Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "instructedAmount": {
            "description": "Amount of money to be moved between the debtor and creditor expressed in GBP as ordered by the initiating party.",
            "$ref": "#/components/schemas/InstructionAmountDtoV2"
          },
          "instructingAgentBic": {
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": " The instructing agent's BIC. Must be exactly 8 or 11 characters long.",
            "type": "string",
            "maxLength": 11,
            "minLength": 8,
            "example": "ABCD1234XYZ"
          },
          "debtorAccount": {
            "description": "Information on the account of the debtor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountIdentificationIbanDtoV2"
              },
              {
                "$ref": "#/components/schemas/AccountIdentificationOtherDtoV2"
              }
            ]
          },
          "debtor": {
            "description": "Information to identify the debtor.",
            "$ref": "#/components/schemas/PartyDetailsDtoV2"
          },
          "creditorAccount": {
            "description": "Information on the account of the creditor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountIdentificationIbanDtoV2"
              },
              {
                "$ref": "#/components/schemas/AccountIdentificationOtherDtoV2"
              }
            ]
          },
          "creditor": {
            "description": "Information to identify the creditor. Option to provide either OrganisationIdentifier or PrivateIdentifier, but not both.",
            "$ref": "#/components/schemas/PartyDetailsDtoV2"
          },
          "purpose": {
            "description": "Underlying reason for the payment transaction, as published in an external purpose code list.",
            "enum": [
              "ACCT",
              "ADCS",
              "AGRT",
              "ALMY",
              "AREN",
              "BECH",
              "BENE",
              "BEXP",
              "BLDM",
              "BKFE",
              "BKIP",
              "BKPP",
              "BNET",
              "BOCE",
              "BONU",
              "CBLK",
              "CBTV",
              "CASH",
              "CDBL",
              "CHAR",
              "CLPR",
              "CMDT",
              "COLL",
              "COMM",
              "COMC",
              "COMT",
              "COMP",
              "CORT",
              "CPKC",
              "CPYR",
              "CSDB",
              "DBTC",
              "DEPT",
              "DERI",
              "DIVD",
              "DNTS",
              "EDUC",
              "ECPR",
              "ELEC",
              "EPAY",
              "ESTX",
              "EXTD",
              "FAND",
              "FEES",
              "FNET",
              "FORW",
              "FREX",
              "FUTR",
              "GAMB",
              "GASB",
              "GDSV",
              "GIFT",
              "GOVT",
              "GSCB",
              "HEDG",
              "HREC",
              "HLRP",
              "HLST",
              "HLTI",
              "HSTX",
              "INPC",
              "INPR",
              "INSC",
              "INSM",
              "INSU",
              "INTE",
              "INTC",
              "INTP",
              "INTX",
              "INVS",
              "IVPT",
              "LICF",
              "LIFI",
              "LIMA",
              "LOAN",
              "LOAR",
              "LOTT",
              "LREB",
              "LREV",
              "LTCF",
              "MDCS",
              "NETT",
              "OTCD",
              "PDEP",
              "PEFC",
              "PENO",
              "PHON",
              "PLDS",
              "PLRF",
              "PPTI",
              "PTXP",
              "REBT",
              "REFU",
              "RELG",
              "RENT",
              "REOD",
              "REPO",
              "RDTX",
              "ROYA",
              "SALA",
              "SAVG",
              "SBSC",
              "SECU",
              "SERV",
              "SLEB",
              "SSBE",
              "SUBS",
              "SUPP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "TAXR",
              "TAXS",
              "TCSC",
              "TRAD",
              "TRFD",
              "TREA",
              "UBIL",
              "VATX",
              "VIEW",
              "WTER",
              "WHLD"
            ],
            "type": "string"
          },
          "categoryPurpose": {
            "description": "Category purpose, in a proprietary form.",
            "enum": [
              "BONU",
              "CASH",
              "CBLK",
              "CCRD",
              "CORT",
              "DCRD",
              "DIVI",
              "DVPM",
              "FCOL",
              "GP2P",
              "GOVT",
              "HEDG",
              "INTC",
              "INTE",
              "LOAN",
              "MP2P",
              "OTHR",
              "PENS",
              "RRCT",
              "SALA",
              "SECU",
              "SSBE",
              "SUPP",
              "TAXS",
              "TRAD",
              "TREA",
              "VATX",
              "WHLD"
            ],
            "type": "string"
          },
          "remittanceInformation": {
            "$ref": "#/components/schemas/StructuredRemittanceInformationDtoV2"
          }
        },
        "additionalProperties": false
      },
      "CreateInboundInstitutionPaymentDtoV2": {
        "required": [
          "categoryPurpose",
          "creditor",
          "creditorAccount",
          "creditorBic",
          "debtor",
          "debtorAccount",
          "debtorBic",
          "endToEndIdentification",
          "instructingAgentBic",
          "instructionIdentification",
          "purpose",
          "instructedAmount"
        ],
        "type": "object",
        "properties": {
          "instructionIdentification": {
            "description": "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.",
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ !#$%&\\*=^_`\\{\\|\\}~\";<>@\\[\\\\\\]]+$",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "endToEndIdentification": {
            "description": "Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "instructingAgentBic": {
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "Must be exactly 8 or 11 characters long.",
            "type": "string"
          },
          "instructedAmount": {
            "description": "Amount of money to be moved between the debtor and creditor expressed in GBP as ordered by the initiating party.",
            "$ref": "#/components/schemas/InstructionAmountDtoV2"
          },
          "debtorAccount": {
            "description": "Information on the account of the debtor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountIdentificationIbanDtoV2"
              },
              {
                "$ref": "#/components/schemas/AccountIdentificationOtherDtoV2"
              }
            ]
          },
          "debtorBic": {
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "Must be exactly 8 or 11 characters long.",
            "type": "string"
          },
          "debtor": {
            "description": "Information to identify the debtor.",
            "$ref": "#/components/schemas/FinancialInstitutionIdentificationV2"
          },
          "creditorBic": {
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "The creditor's Bank Identifier Code. Must be exactly 8 or 11 characters long.",
            "type": "string"
          },
          "creditorAccount": {
            "description": "Information on the account of the creditor.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountIdentificationIbanDtoV2"
              },
              {
                "$ref": "#/components/schemas/AccountIdentificationOtherDtoV2"
              }
            ]
          },
          "creditor": {
            "description": "Information to identify the creditor. Option to provide either OrganisationIdentifier or PrivateIdentifier, but not both.",
            "$ref": "#/components/schemas/FinancialInstitutionIdentificationV2"
          },
          "purpose": {
            "enum": [
              "ACCT",
              "ADCS",
              "AGRT",
              "ALMY",
              "AREN",
              "BECH",
              "BENE",
              "BEXP",
              "BLDM",
              "BKFE",
              "BKIP",
              "BKPP",
              "BNET",
              "BOCE",
              "BONU",
              "CBLK",
              "CBTV",
              "CASH",
              "CDBL",
              "CHAR",
              "CLPR",
              "CMDT",
              "COLL",
              "COMM",
              "COMC",
              "COMT",
              "COMP",
              "CORT",
              "CPKC",
              "CPYR",
              "CSDB",
              "DBTC",
              "DEPT",
              "DERI",
              "DIVD",
              "DNTS",
              "EDUC",
              "ECPR",
              "ELEC",
              "EPAY",
              "ESTX",
              "EXTD",
              "FAND",
              "FEES",
              "FNET",
              "FORW",
              "FREX",
              "FUTR",
              "GAMB",
              "GASB",
              "GDSV",
              "GIFT",
              "GOVT",
              "GSCB",
              "HEDG",
              "HREC",
              "HLRP",
              "HLST",
              "HLTI",
              "HSTX",
              "INPC",
              "INPR",
              "INSC",
              "INSM",
              "INSU",
              "INTE",
              "INTC",
              "INTP",
              "INTX",
              "INVS",
              "IVPT",
              "LICF",
              "LIFI",
              "LIMA",
              "LOAN",
              "LOAR",
              "LOTT",
              "LREB",
              "LREV",
              "LTCF",
              "MDCS",
              "NETT",
              "OTCD",
              "PDEP",
              "PEFC",
              "PENO",
              "PHON",
              "PLDS",
              "PLRF",
              "PPTI",
              "PTXP",
              "REBT",
              "REFU",
              "RELG",
              "RENT",
              "REOD",
              "REPO",
              "RDTX",
              "ROYA",
              "SALA",
              "SAVG",
              "SBSC",
              "SECU",
              "SERV",
              "SLEB",
              "SSBE",
              "SUBS",
              "SUPP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "TAXR",
              "TAXS",
              "TCSC",
              "TRAD",
              "TRFD",
              "TREA",
              "UBIL",
              "VATX",
              "VIEW",
              "WTER",
              "WHLD"
            ],
            "type": "string"
          },
          "categoryPurpose": {
            "enum": [
              "BONU",
              "CASH",
              "CBLK",
              "CCRD",
              "CORT",
              "DCRD",
              "DIVI",
              "DVPM",
              "FCOL",
              "GP2P",
              "GOVT",
              "HEDG",
              "INTC",
              "INTE",
              "LOAN",
              "MP2P",
              "OTHR",
              "PENS",
              "RRCT",
              "SALA",
              "SECU",
              "SSBE",
              "SUPP",
              "TAXS",
              "TRAD",
              "TREA",
              "VATX",
              "WHLD"
            ],
            "type": "string"
          },
          "remittanceInformation": {
            "$ref": "#/components/schemas/UnstructuredRemittanceInformationDtoV2"
          }
        },
        "additionalProperties": false
      },
      "CreateInboundReturnPaymentDtoV2": {
        "required": [
          "creditorBic",
          "debtorBic",
          "instructedAmount",
          "originalEndToEndIdentification",
          "originalInstructionIdentification",
          "originalReference",
          "originalUetr",
          "returnReasonCode"
        ],
        "type": "object",
        "properties": {
          "originalUetr": {
            "type": "string",
            "format": "uuid",
            "pattern": "[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}",
            "description": "Universally unique identifier to provide the original end-to-end reference of a payment transaction.",
            "example": "A1B2C3D4-5E6F-4A1B-8C2D-3E4F5A6B7C8D"
          },
          "returnReasonCode": {
            "enum": [
              "AC01",
              "AC02",
              "AC03",
              "AC04",
              "AC06",
              "AC07",
              "AC13",
              "AC14",
              "AC15",
              "AC16",
              "AC17",
              "AG01",
              "AG02",
              "AG07",
              "AGNT",
              "AM01",
              "AM02",
              "AM03",
              "AM04",
              "AM05",
              "AM06",
              "AM07",
              "AM09",
              "AM10",
              "ARDT",
              "BE01",
              "BE04",
              "BE05",
              "BE06",
              "BE07",
              "BE08",
              "BE10",
              "BE11",
              "BE16",
              "BE17",
              "CN01",
              "CNOR",
              "CNPC",
              "CURR",
              "CUST",
              "DNOR",
              "DS28",
              "DT01",
              "DT02",
              "ED01",
              "ED03",
              "ED05",
              "EMVL",
              "ERIN",
              "FF03",
              "FF04",
              "FF05",
              "FF06",
              "FF07",
              "FOCR",
              "FR01",
              "FRTR",
              "G004",
              "MD01",
              "MD02",
              "MD05",
              "MD06",
              "MD07",
              "MS02",
              "MS03",
              "NOAS",
              "NOCM",
              "NOOR",
              "PINL",
              "RC01",
              "RC07",
              "RC08",
              "RC11",
              "RF01",
              "RR01",
              "RR02",
              "RR03",
              "RR04",
              "RR05",
              "RR06",
              "RR07",
              "RR08",
              "RR09",
              "RR11",
              "RR12",
              "RUTA",
              "SL01",
              "SL02",
              "SL11",
              "SL12",
              "SL13",
              "SL14",
              "SP01",
              "SP02",
              "SVNR",
              "TM01",
              "TRAC",
              "UPAY"
            ],
            "type": "string"
          },
          "originalInstructionIdentification": {
            "description": "The original unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.",
            "minLength": 1,
            "maxLength": 35,
            "type": "string",
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ !#$%&\\*=^_`\\{\\|\\}~\";<>@\\[\\\\\\]]+$"
          },
          "originalEndToEndIdentification": {
            "description": "The original unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ ]+$"
          },
          "originalReference": {
            "minLength": 1,
            "maxLength": 35,
            "type": "string",
            "description": "A reference, as assigned by the ultimate debtor to unambiguously refer to the payment transaction.",
            "nullable": true,
            "example": "RF84930217563829"
          },
          "instructedAmount": {
            "description": "Amount of money to be moved between the debtor and creditor expressed in GBP as ordered by the initiating party.",
            "$ref": "#/components/schemas/InstructionAmountDtoV2"
          },
          "debtorName": {
            "type": "string",
            "description": "Name of the person or business who owns the debtor account.",
            "example": "Jane Smith"
          },
          "debtorBic": {
            "minLength": 8,
            "maxLength": 11,
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "Valid BIC for the debtor account.",
            "type": "string",
            "example": "GB45Q2P1N0M"
          },
          "creditorName": {
            "type": "string",
            "description": "Name of the person or business who owns the creditor account.",
            "example": "John Doe"
          },
          "creditorBic": {
            "minLength": 8,
            "maxLength": 11,
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "The creditor's Bank Identifier Code. Must be exactly 8 or 11 characters long.",
            "type": "string",
            "example": "GB29X7L5Q2R"
          }
        },
        "additionalProperties": false
      },
      "CreateInboundReturnPaymentSimplifiedDtoV2": {
        "required": [
          "instructionIdentification",
          "paymentId",
          "returnReasonCode"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "format": "uuid",
            "description": "This must be the paymentId used in the simulated outbound payment message. ClearBank identifier that uniquely identifies the new outbound/return payment instruction."
          },
          "returnReasonCode": {
            "enum": [
              "AM09",
              "BE01",
              "BE04",
              "BE05",
              "BE06",
              "FOCR",
              "MD06",
              "MS02",
              "CURR",
              "AC04",
              "AM02",
              "AM03",
              "AG01",
              "RR04",
              "AC01",
              "AC02",
              "AC03",
              "AC06",
              "AC07",
              "AC13",
              "AC14",
              "AC15",
              "AC16",
              "AC17",
              "AG02",
              "AG07",
              "AGNT",
              "AM01",
              "AM04",
              "AM05",
              "AM06",
              "AM07",
              "AM10",
              "ARDT",
              "BE07",
              "BE08",
              "BE10",
              "BE11",
              "BE16",
              "BE17",
              "CN01",
              "CNOR",
              "CNPC",
              "CUST",
              "DNOR",
              "DS28",
              "DT01",
              "DT02",
              "ED01",
              "ED03",
              "ED05",
              "EMVL",
              "ERIN",
              "FF03",
              "FF04",
              "FF05",
              "FF06",
              "FF07",
              "FR01",
              "FRTR",
              "G004",
              "MD01",
              "MD02",
              "MD05",
              "MD07",
              "MS03",
              "NOAS",
              "NOCM",
              "NOOR",
              "PINL",
              "RC01",
              "RC07",
              "RC08",
              "RC11",
              "RF01",
              "RR01",
              "RR02",
              "RR03",
              "RR05",
              "RR06",
              "RR07",
              "RR08",
              "RR09",
              "RR11",
              "RR12",
              "RUTA",
              "SL01",
              "SL02",
              "SL11",
              "SL12",
              "SL13",
              "SL14",
              "SP01",
              "SP02",
              "SVNR",
              "TM01",
              "TRAC",
              "UPAY"
            ],
            "type": "string"
          },
          "instructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction. This value will be used as the ReturnIdentification (<RtrId>) in the generated inbound pacs.004 return payment message. It can be used to locate the corresponding return payment within our system.",
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ !#$%&\\*=^_`\\{\\|\\}~\";<>@\\[\\\\\\]]+$",
            "example": "Invoice 23456789"
          },
          "instructedAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of money to be included in the simulated returned payment."
          }
        },
        "additionalProperties": false
      },
      "FinancialInstitutionIdentificationV2": {
        "required": [
          "lei",
          "name",
          "postalAddress"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "example": "Bank of Example Ltd",
            "description": "Name of the financial institution."
          },
          "postalAddress": {
            "description": "Address of the person or business who owns the account.",
            "$ref": "#/components/schemas/PartyAddressDetailsDtoV2"
          },
          "lei": {
            "description": "Legal Entity Identifier of the party.",
            "maxLength": 20,
            "minLength": 20,
            "type": "string",
            "example": "2138007ZQ1A2B3C4D5E6"
          }
        },
        "additionalProperties": false
      },
      "InstructionAmountDtoV2": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": "100.00",
            "description": "Amount of money in the transaction."
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Set to 'GBP' as other currencies are not supported.",
            "example": "GBP"
          }
        },
        "additionalProperties": false
      },
      "OrganisationIdentifierV2": {
        "type": "object",
        "properties": {
          "bic": {
            "pattern": "^([A-Z0-9]{8}|[A-Z0-9]{11})$",
            "description": "Party's Business Identifier Code (BIC). Must be exactly 8 or 11 characters long.",
            "type": "string",
            "example": "GB45Q2P1N0M"
          },
          "lei": {
            "description": "Legal Entity Identifier of the party.",
            "minLength": 20,
            "maxLength": 20,
            "type": "string",
            "example": "5493001KJH8B2Q3L5X79"
          },
          "otherIdentification": {
            "description": "Other identification of the organisation, such as company registration number.",
            "maxLength": 35,
            "type": "string",
            "example": "12345678"
          }
        },
        "additionalProperties": false
      },
      "PartyAddressDetailsDtoV2": {
        "required": [
          "country",
          "postCode",
          "townName"
        ],
        "type": "object",
        "properties": {
          "buildingNumber": {
            "description": "Number or name that identifies the position of a building on a street.",
            "type": "string",
            "example": "10"
          },
          "buildingName": {
            "description": "Name that identifies a building.",
            "type": "string",
            "example": "Example House"
          },
          "streetName": {
            "description": "Name of a street or thoroughfare.",
            "type": "string",
            "example": "Generic Street"
          },
          "townName": {
            "description": "Name of a town, city or village.",
            "minLength": 1,
            "maxLength": 35,
            "type": "string",
            "example": "London"
          },
          "country": {
            "description": "Country as a two-letter ISO country code.",
            "minLength": 2,
            "maxLength": 2,
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "example": "GB"
          },
          "postCode": {
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
            "minLength": 1,
            "maxLength": 16,
            "type": "string",
            "example": "E1 8QS"
          },
          "addressLine1": {
            "description": "First line of the address.",
            "maxLength": 70,
            "type": "string",
            "example": "10 Generic Street"
          },
          "addressLine2": {
            "description": "Second line of the address.",
            "maxLength": 70,
            "type": "string",
            "example": "Example House, London"
          }
        },
        "additionalProperties": false
      },
      "PartyDetailsDtoV2": {
        "required": [
          "name",
          "postalAddress"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the person or business who owns the account.",
            "minLength": 1,
            "type": "string",
            "example": "John Doe"
          },
          "postalAddress": {
            "description": "Address of the person or business who owns the account.",
            "$ref": "#/components/schemas/PartyAddressDetailsDtoV2"
          },
          "organisationIdentifier": {
            "description": "Identification of an organisation.",
            "$ref": "#/components/schemas/OrganisationIdentifierV2"
          },
          "privateIdentifier": {
            "description": "Identification of a private individual.",
            "$ref": "#/components/schemas/PrivateIdentifierV2"
          }
        },
        "additionalProperties": false
      },
      "PaymentCreatedResponseDtoV2": {
        "required": [
          "uetr"
        ],
        "type": "object",
        "properties": {
          "uetr": {
            "description": "Universally unique identifier to provide an end-to-end reference of a payment transaction.",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}",
            "example": "a1b2c3d4-5e6f-4a1b-8c2d-3e4f5a6b7c8d"
          }
        },
        "additionalProperties": false
      },
      "PrivateIdentifierV2": {
        "type": "object",
        "properties": {
          "otherIdentification": {
            "description": "Other identification of the private individual, such as national insurance number.",
            "maxLength": 35,
            "type": "string",
            "example": "AB123456C"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "required": [
          "type",
          "title"
        ],
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "errors": {
            "description": "Gets or sets the validation errors associated with this instance of problem details.",
            "type": "object"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231], Section 3.4).",
            "type": "string"
          },
          "type": {
            "description": "A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when dereferenced, it provides human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be \"about:blank\".",
            "type": "string"
          }
        }
      },
      "StructuredRemittanceInformationDtoV2": {
        "type": "object",
        "properties": {
          "creditorReferenceInformation": {
            "x-flattened-from-source-iso-type": true,
            "x-source-iso-type-name": "CreditorReferenceType2",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\n\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\n\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "example": "RF18539007547034"
          }
        },
        "additionalProperties": false,
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
      },
      "UnstructuredRemittanceInformationDtoV2": {
        "type": "object",
        "properties": {
          "unstructured": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ !#$%&\\*=^_`\\{\\|\\}~\";<>@\\[\\\\\\]]+$",
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
          }
        },
        "additionalProperties": false,
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
      }
    }
  }
}