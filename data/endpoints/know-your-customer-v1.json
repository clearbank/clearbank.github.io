{
  "openapi": "3.0.2",
  "info": {
    "title": "Customer Due Diligence API",
    "version": "1.0xyzabc"
  },
  "paths": {
    "/v1/customercheck/retail": {
      "post": {
        "tags": [
          "CustomerCheck"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Your API token, retrieved from the web portal.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DigitalSignature",
            "in": "header",
            "description": "Signed hash of the body of the request. The hash is signed by your private key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "A unique identifier for the request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCustomerCheckRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCustomerCheckRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailCustomerCheckRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCustomerCheckResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCustomerCheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailCustomerCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {              
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "required": [
          "buildingNameNumber",
          "countryCode",
          "postalCode",
          "streetName"
        ],
        "type": "object",
        "properties": {
          "buildingNameNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-',.() ]+$",
            "type": "string",
            "example": "22"
          },
          "streetName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-',.() ]+$",
            "type": "string",
            "example": "Long Road"
          },
          "city": {
            "maxLength": 40,
            "pattern": "^[a-zA-Z0-9\\-',.() ]+$",
            "type": "string",
            "nullable": true,
            "example": "York"
          },
          "county": {
            "maxLength": 40,
            "pattern": "^[a-zA-Z0-9\\-',.() ]+$",
            "type": "string",
            "nullable": true,
            "example": "Yorkshire"
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9 ]+$",
            "type": "string",
            "example": "YO31 7UH"
          },
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          }
        },
        "additionalProperties": false
      },
      "CountryCode": {
        "enum": [
          "AFG",
          "ALB",
          "ATA",
          "DZA",
          "ASM",
          "AND",
          "AGO",
          "ATG",
          "AZE",
          "ARG",
          "AUS",
          "AUT",
          "BHS",
          "BHR",
          "BGD",
          "ARM",
          "BRB",
          "BEL",
          "BMU",
          "BTN",
          "BOL",
          "BIH",
          "BWA",
          "BVT",
          "BRA",
          "BLZ",
          "IOT",
          "SLB",
          "VGB",
          "BRN",
          "BGR",
          "MMR",
          "BDI",
          "BLR",
          "KHM",
          "CMR",
          "CAN",
          "CPV",
          "CYM",
          "CAF",
          "LKA",
          "TCD",
          "CHL",
          "CHN",
          "TWN",
          "CXR",
          "CCK",
          "COL",
          "COM",
          "MYT",
          "COG",
          "COD",
          "COK",
          "CRI",
          "HRV",
          "CUB",
          "CYP",
          "CZE",
          "BEN",
          "DNK",
          "DMA",
          "DOM",
          "ECU",
          "SLV",
          "GNQ",
          "ETH",
          "ERI",
          "EST",
          "FRO",
          "FLK",
          "SGS",
          "FJI",
          "FIN",
          "ALA",
          "FRA",
          "GUF",
          "PYF",
          "ATF",
          "DJI",
          "GAB",
          "GEO",
          "GMB",
          "PSE",
          "DEU",
          "GHA",
          "GIB",
          "KIR",
          "GRC",
          "GRL",
          "GRD",
          "GLP",
          "GUM",
          "GTM",
          "GIN",
          "GUY",
          "HTI",
          "HMD",
          "VAT",
          "HND",
          "HKG",
          "HUN",
          "ISL",
          "IND",
          "IDN",
          "IRN",
          "IRQ",
          "IRL",
          "ISR",
          "ITA",
          "CIV",
          "JAM",
          "JPN",
          "KAZ",
          "JOR",
          "KEN",
          "PRK",
          "KOR",
          "KWT",
          "KGZ",
          "LAO",
          "LBN",
          "LSO",
          "LVA",
          "LBR",
          "LBY",
          "LIE",
          "LTU",
          "LUX",
          "MAC",
          "MDG",
          "MWI",
          "MYS",
          "MDV",
          "MLI",
          "MLT",
          "MTQ",
          "MRT",
          "MUS",
          "MEX",
          "MCO",
          "MNG",
          "MDA",
          "MNE",
          "MSR",
          "MAR",
          "MOZ",
          "OMN",
          "NAM",
          "NRU",
          "NPL",
          "NLD",
          "CUW",
          "ABW",
          "SXM",
          "BES",
          "NCL",
          "VUT",
          "NZL",
          "NIC",
          "NER",
          "NGA",
          "NIU",
          "NFK",
          "NOR",
          "MNP",
          "UMI",
          "FSM",
          "MHL",
          "PLW",
          "PAK",
          "PAN",
          "PNG",
          "PRY",
          "PER",
          "PHL",
          "PCN",
          "POL",
          "PRT",
          "GNB",
          "TLS",
          "PRI",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "BLM",
          "SHN",
          "KNA",
          "AIA",
          "LCA",
          "MAF",
          "SPM",
          "VCT",
          "SMR",
          "STP",
          "SAU",
          "SEN",
          "SRB",
          "SYC",
          "SLE",
          "SGP",
          "SVK",
          "VNM",
          "SVN",
          "SOM",
          "ZAF",
          "ZWE",
          "ESP",
          "SSD",
          "SDN",
          "ESH",
          "SUR",
          "SJM",
          "SWZ",
          "SWE",
          "CHE",
          "SYR",
          "TJK",
          "THA",
          "TGO",
          "TKL",
          "TON",
          "TTO",
          "ARE",
          "TUN",
          "TUR",
          "TKM",
          "TCA",
          "TUV",
          "UGA",
          "UKR",
          "MKD",
          "EGY",
          "GBR",
          "GGY",
          "JEY",
          "IMN",
          "TZA",
          "USA",
          "VIR",
          "BFA",
          "URY",
          "UZB",
          "VEN",
          "WLF",
          "WSM",
          "YEM",
          "ZMB"
        ],
        "type": "string",
        "example": "GBR"
      },
      "CustomerData": {
        "required": [
          "currentAddress",
          "dateOfBirth",
          "email",
          "name",
          "nationalInsuranceNumber",
          "nationalities",
          "taxResidency"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/PersonName"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "26-11-1976"
          },
          "nationalities": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "taxResidency": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "nationalInsuranceNumber": {
            "minLength": 1,
            "pattern": "^[a-zA-Z]{2}\\d{6}[a-zA-Z]$",
            "example": "AB112233C",
            "type": "string",
            "description": "The National Insurance (NI) of the customer. Should not include whitespace."
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email",
            "example": "example@emailprovider.co.uk"
          },
          "mobile": {
            "pattern": "^\\+?[1-9]\\d{7,19}$",
            "type": "string",
            "nullable": true,
            "description": "The customer's mobile number. May include the country-code.",
            "example": "7725666777"
          },
          "currentAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false
      },
      "PersonName": {
        "required": [
          "firstName",
          "surname"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^[a-zA-Z.'\\- ]+$",
            "type": "string",
            "example": "Adrien"
          },
          "surname": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "^[a-zA-Z.'\\- ]+$",
            "type": "string",
            "example": "Reed-Myers"
          },
          "middleName": {
            "maxLength": 100,
            "pattern": "^[a-zA-Z.'\\- ]+$",
            "type": "string",
            "nullable": true,
            "example": "Edin"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "description": "A URI reference [RFC3986] that identifies a problem type. When dereferenced,  it provides a human-readable documentation for the problem type. When not present, default value is assumed to be 'about:blank'."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "A short, human-readable summary of the problem type."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem."
          },
          "detail": {
            "type": "string",
            "nullable": true,
            "description": "A human-readable explanation of what went wrong. It can include specifics about the issue, missing parameters, or invalid data."
          },
          "instance": {
            "type": "string",
            "nullable": true,
            "description": "A URL reference to a retrieve more information about the error, if available."
          }
        },
        "additionalProperties": {}
      },
      "RetailCustomerCheckRequest": {
        "required": [
          "customerData",
          "institutionId"
        ],
        "type": "object",
        "properties": {
          "institutionId": {
            "type": "string",
            "format": "uuid"
          },
          "customerData": {
            "$ref": "#/components/schemas/CustomerData"
          }
        },
        "additionalProperties": false
      },
      "RetailCustomerCheckResponse": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}