{"componentChunkName":"component---src-templates-pages-tsx","path":"/uk/docs/gbp-payments/confirmation-of-payee","result":{"data":{"site":{"siteMetadata":{"title":"ClearBank Developer Portal","docsLocation":"https://github.com/clearbank/docs/tree/master/content/docs"}},"mdx":{"fields":{"id":"30be2d1e-cd30-5293-b231-3e4908286555","title":"Confirmation Of Payee (CoP)","slug":"/uk/docs/gbp-payments/confirmation-of-payee"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Confirmation Of Payee (CoP)\",\n  \"order\": 7,\n  \"showPageMenu\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Confirmation of Payee (CoP) gives you greater assurance that you are sending payments to the intended beneficiary. It not only helps in preventing accidental, misdirected payments but also reduces the risk associated with Authorised Push Payment (APP) fraud. CoP is a scheme agnostic, peer-to-peer messaging service between accredited participants and sits completely outside of the payment journey. A CoP check can be made prior to setting up a payee or making a payment.\"), mdx(\"p\", null, \"ClearBank is a CoP participant and will provide this account name checking service to those customers who use ClearBank sort codes linked to our bank code.\"), mdx(\"h3\", null, \"Confirmation of Payee as a Service\"), mdx(\"p\", null, \"Confirmation of Payee as a Service (CoPaaS) is an extension of the technical capability of ClearBank\\u2019s own participation in Confirmation of Payee (CoP), whereby clients must become direct participants with Pay.UK to use CoP and then integrate with ClearBank\\u2019s technical service to have access to CoP request and/or CoP response functionality. For this service, ClearBank will solely be the Technical Service Provider (TSP) and this service is only available to clients operating under their own bank code.\"), mdx(\"p\", null, \"If you are using CoPaaS, you will need to use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#copaas-onboarding\"\n  }, \"CoPaaS onboarding\"), \" endpoints to complete your onboarding. You can then use the CoP respond and request endpoints in the usual way.\"), mdx(\"h2\", null, \"CoP respond (inbound)\"), mdx(\"p\", null, \"Responding to a CoP request from an external participant requires us to complete a fuzzy matching check on the account in question. To do so successfully, we need the following account information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The name of the legal owner of the account\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nature of funds held in the account: Personal or Business\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating nature of the account: Single or Joint\")), mdx(\"p\", null, \"For your real and virtual accounts to be CoP-ready, you will need to use the following PATCH endpoints to update your accounts:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../gbp-accounts/manage-accounts#amend-an-account-real\"\n  }, \"PATCH /v1/Accounts/{accountId}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../gbp-accounts/manage-accounts#amend-an-account-virtual\"\n  }, \"PATCH /v1/Accounts/{accountId}/Virtual/{virtualAccountId}\"))), mdx(\"p\", null, \"If you have chosen to use the ClearBank CoP service, all your real and virtual accounts will be opted in by default, at the time of account creation. \"), mdx(\"p\", null, \"For a real or virtual account to be opted out from using this service, you can use the following PUT endpoints:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#opt-out-from-the-cop-service-real-account\"\n  }, \"PUT/ v1/Cop/opt/accounts/{accountId}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#opt-out-from-the-cop-service-virtual-account\"\n  }, \"PUT/ v1/Cop/opt/accounts/{accountId}/virtual/{VirtualAccountId}\"))), mdx(\"p\", null, \"Further information about opting out from using our CoP service along with your responsibilities can be found in our Confirmation of Payee (CoP) Operating Guide. This document can be found in the Reference Documents section in the Knowledge Centre.\"), mdx(EndpointBlock, {\n    type: \"put\",\n    title: \"Opt out from the CoP service (real account)\",\n    description: CONSTANTS.postUpdateAccountToOptOutOfClearBankServicesDescription,\n    endpoints: [{\n      path: \"/v1/Cop/opt/accounts/{accountId}\",\n      version: \"1.0.COP\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"put\",\n    title: \"Opt out from the CoP service (virtual account)\",\n    description: CONSTANTS.postUpdateVirtualAccountToOptOutOfClearBankServicesDescription,\n    endpoints: [{\n      path: \"/v1/Cop/opt/accounts/{accountId}/virtual/{virtualAccountId}\",\n      version: \"1.0.COP\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(\"h2\", null, \"CoP request (outbound)\"), mdx(\"p\", null, \"Sending a CoP request to an external participant requires us to pass the request to the participant so that they can complete a fuzzy matching check on the account in question.\\nTo be able to send a CoP request (outbound) to an external participant, you will need to use the following POST endpoint so that the exact name registered with the payee\\u2019s account can be confirmed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#check-name-registered-with-the-payees-account\"\n  }, \"POST /open-banking/outbound/v1/name-verification\"))), mdx(\"p\", null, \"Once confirmed, we pass the result of the matching check back to you which you can then expose to your customer. Pay.UK have provided a messaging standard for you to follow. Further information about the messaging standard along with your responsibilities can be found in our Confirmation of Payee (CoP) Operating Guide. This document can be found in the Reference Documents section in the Knowledge Centre.\"), mdx(\"h3\", null, \"CoP requests that require secondary reference data (SRD)\"), mdx(\"p\", null, \"CoP checks are typically carried out on accounts that are addressable by sort code and account number, but can also be done for accounts that are addressable through secondary reference data (SRD). SRD-level checks are performed against the underlying account that is identified by the SRD rather than the name held against the sort code and account number. If an account requires SRD and it is not provided, the CoP check cannot be carried out.\"), mdx(\"p\", null, \"To check whether SRD will be required, use:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#check-whether-a-sort-code-account-number-requires-srd-with-cop-requests\"\n  }, \"POST /open-banking/outbound/v1/srd/validate\"))), mdx(\"p\", null, \"If the CoP Check requires SRD, then it must be entered in the SecondaryIdentification field in the CoP request to enable the CoP responder to identify the account.\"), mdx(\"p\", null, \"Supporting SRD-validated CoP checks is mandatory, however the integration that is required to support the SRD Validate endpoint, which is called ahead of the CoP check being sent is optional. Although not mandatory, this will inform your customers as to whether they need the secondary data ahead of sending the CoP check, making for a more streamlined and informed journey.\"), mdx(\"h3\", null, \"Owner name formatting requirements\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OwnerName\"), \" field is used to identify the owner of the account. The name must be provided in a structured or unstructured comma-delimited format. Both formats consist of three parts separated by commas. For simplicity, we recommend using the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unstructured\"), \" format for all CoP name verification requests.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The unstructured format is valid for personal, business, and joint accounts. The full owner name string is populated in the third part.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The structured format is only valid for personal accounts. The salutation, forename(s), and surname are separated by commas.\")), mdx(Callout, {\n    colour: \"blue\",\n    mdxType: \"Callout\"\n  }, \"Commas must be included, if omitted, it may cause delays in receiving the outcome of the verification from the external participant.\"), mdx(\"p\", null, \"For reference, the following table gives examples of how the owner name should be formatted for different types of accounts:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Format\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Account type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Example\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Personal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John Andrew Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John A Smith\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Business\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,ClearBank Ltd\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Joint\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,John Smith and Jane MacDonald\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr and Mrs J Smith\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Structured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Personal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John, Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John Andrew, Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John A, Smith\"))))), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Check payee account name\",\n    endpoints: [{\n      path: \"/open-banking/outbound/v1/name-verification\",\n      version: \"1.0.COP-Outbound\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Check whether a sort code/account number requires SRD\",\n    endpoints: [{\n      path: \"/open-banking/outbound/v1/srd/validate\",\n      version: \"1.0.COP-Outbound\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(\"h2\", null, \"CoPaaS onboarding\"), mdx(\"p\", null, \"As part of your onboarding journey for CoPaaS, you will need to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#get-csr-file\"\n  }, \"Get CSR file\"), \" endpoint to get the Certificate Signing Request (CSR) .csr file. The softwareStatementID and certificateType inputs are required. The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{softwareStatementId}\"), \" URL parameter is the unique ID of a CoP software statement on your Open Banking Directory entry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#create-a-new-certificate\"\n  }, \"Create a new certificate\"), \" endpoint to upload an X.509 certificate in a PEM .pem format. This is the signed PEM you can download from the Open Banking Directory after uploading the certificate signing request returned from the Get CSR file endpoint. Line breaks must be removed from the PEM before submission to ClearBank.\")), mdx(Callout, {\n    colour: \"blue\",\n    mdxType: \"Callout\"\n  }, \"These endpoints are only applicable if you are using CoPaaS.\"), mdx(\"p\", null, \"Once you have completed the onboarding set up, you can use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#cop-respond-inbound\"\n  }, \"CoP respond\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#cop-request-outbound\"\n  }, \"CoP request\"), \" endpoints in the usual way.\"), mdx(EndpointBlock, {\n    type: \"get\",\n    title: \"Get CSR file\",\n    endpoints: [{\n      path: \"/v1/softwarestatements/{softwareStatementId}/csr/{certificatetype}\",\n      version: \"1.0.CoPaaS\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Create a new certificate\",\n    endpoints: [{\n      path: \"/v1/softwarestatements/{softwareStatementId}/pem\",\n      version: \"1.0.CoPaaS\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview","items":[{"url":"#confirmation-of-payee-as-a-service","title":"Confirmation of Payee as a Service"}]},{"url":"#cop-respond-inbound","title":"CoP respond (inbound)"},{"url":"#cop-request-outbound","title":"CoP request (outbound)","items":[{"url":"#cop-requests-that-require-secondary-reference-data-srd","title":"CoP requests that require secondary reference data (SRD)"},{"url":"#owner-name-formatting-requirements","title":"Owner name formatting requirements"}]},{"url":"#copaas-onboarding","title":"CoPaaS onboarding"}]},"parent":{"relativePath":"uk/docs/gbp-payments/confirmation-of-payee.mdx"},"frontmatter":{"metaTitle":null,"metaDescription":null,"showPageMenu":true}},"pageContent":{"edges":[{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Confirmation Of Payee (CoP)\",\n  \"order\": 7,\n  \"showPageMenu\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Overview\"), mdx(\"p\", null, \"Confirmation of Payee (CoP) gives you greater assurance that you are sending payments to the intended beneficiary. It not only helps in preventing accidental, misdirected payments but also reduces the risk associated with Authorised Push Payment (APP) fraud. CoP is a scheme agnostic, peer-to-peer messaging service between accredited participants and sits completely outside of the payment journey. A CoP check can be made prior to setting up a payee or making a payment.\"), mdx(\"p\", null, \"ClearBank is a CoP participant and will provide this account name checking service to those customers who use ClearBank sort codes linked to our bank code.\"), mdx(\"h3\", null, \"Confirmation of Payee as a Service\"), mdx(\"p\", null, \"Confirmation of Payee as a Service (CoPaaS) is an extension of the technical capability of ClearBank\\u2019s own participation in Confirmation of Payee (CoP), whereby clients must become direct participants with Pay.UK to use CoP and then integrate with ClearBank\\u2019s technical service to have access to CoP request and/or CoP response functionality. For this service, ClearBank will solely be the Technical Service Provider (TSP) and this service is only available to clients operating under their own bank code.\"), mdx(\"p\", null, \"If you are using CoPaaS, you will need to use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#copaas-onboarding\"\n  }, \"CoPaaS onboarding\"), \" endpoints to complete your onboarding. You can then use the CoP respond and request endpoints in the usual way.\"), mdx(\"h2\", null, \"CoP respond (inbound)\"), mdx(\"p\", null, \"Responding to a CoP request from an external participant requires us to complete a fuzzy matching check on the account in question. To do so successfully, we need the following account information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The name of the legal owner of the account\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nature of funds held in the account: Personal or Business\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating nature of the account: Single or Joint\")), mdx(\"p\", null, \"For your real and virtual accounts to be CoP-ready, you will need to use the following PATCH endpoints to update your accounts:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../gbp-accounts/manage-accounts#amend-an-account-real\"\n  }, \"PATCH /v1/Accounts/{accountId}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../gbp-accounts/manage-accounts#amend-an-account-virtual\"\n  }, \"PATCH /v1/Accounts/{accountId}/Virtual/{virtualAccountId}\"))), mdx(\"p\", null, \"If you have chosen to use the ClearBank CoP service, all your real and virtual accounts will be opted in by default, at the time of account creation. \"), mdx(\"p\", null, \"For a real or virtual account to be opted out from using this service, you can use the following PUT endpoints:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#opt-out-from-the-cop-service-real-account\"\n  }, \"PUT/ v1/Cop/opt/accounts/{accountId}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#opt-out-from-the-cop-service-virtual-account\"\n  }, \"PUT/ v1/Cop/opt/accounts/{accountId}/virtual/{VirtualAccountId}\"))), mdx(\"p\", null, \"Further information about opting out from using our CoP service along with your responsibilities can be found in our Confirmation of Payee (CoP) Operating Guide. This document can be found in the Reference Documents section in the Knowledge Centre.\"), mdx(EndpointBlock, {\n    type: \"put\",\n    title: \"Opt out from the CoP service (real account)\",\n    description: CONSTANTS.postUpdateAccountToOptOutOfClearBankServicesDescription,\n    endpoints: [{\n      path: \"/v1/Cop/opt/accounts/{accountId}\",\n      version: \"1.0.COP\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"put\",\n    title: \"Opt out from the CoP service (virtual account)\",\n    description: CONSTANTS.postUpdateVirtualAccountToOptOutOfClearBankServicesDescription,\n    endpoints: [{\n      path: \"/v1/Cop/opt/accounts/{accountId}/virtual/{virtualAccountId}\",\n      version: \"1.0.COP\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(\"h2\", null, \"CoP request (outbound)\"), mdx(\"p\", null, \"Sending a CoP request to an external participant requires us to pass the request to the participant so that they can complete a fuzzy matching check on the account in question.\\nTo be able to send a CoP request (outbound) to an external participant, you will need to use the following POST endpoint so that the exact name registered with the payee\\u2019s account can be confirmed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#check-name-registered-with-the-payees-account\"\n  }, \"POST /open-banking/outbound/v1/name-verification\"))), mdx(\"p\", null, \"Once confirmed, we pass the result of the matching check back to you which you can then expose to your customer. Pay.UK have provided a messaging standard for you to follow. Further information about the messaging standard along with your responsibilities can be found in our Confirmation of Payee (CoP) Operating Guide. This document can be found in the Reference Documents section in the Knowledge Centre.\"), mdx(\"h3\", null, \"CoP requests that require secondary reference data (SRD)\"), mdx(\"p\", null, \"CoP checks are typically carried out on accounts that are addressable by sort code and account number, but can also be done for accounts that are addressable through secondary reference data (SRD). SRD-level checks are performed against the underlying account that is identified by the SRD rather than the name held against the sort code and account number. If an account requires SRD and it is not provided, the CoP check cannot be carried out.\"), mdx(\"p\", null, \"To check whether SRD will be required, use:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#check-whether-a-sort-code-account-number-requires-srd-with-cop-requests\"\n  }, \"POST /open-banking/outbound/v1/srd/validate\"))), mdx(\"p\", null, \"If the CoP Check requires SRD, then it must be entered in the SecondaryIdentification field in the CoP request to enable the CoP responder to identify the account.\"), mdx(\"p\", null, \"Supporting SRD-validated CoP checks is mandatory, however the integration that is required to support the SRD Validate endpoint, which is called ahead of the CoP check being sent is optional. Although not mandatory, this will inform your customers as to whether they need the secondary data ahead of sending the CoP check, making for a more streamlined and informed journey.\"), mdx(\"h3\", null, \"Owner name formatting requirements\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OwnerName\"), \" field is used to identify the owner of the account. The name must be provided in a structured or unstructured comma-delimited format. Both formats consist of three parts separated by commas. For simplicity, we recommend using the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unstructured\"), \" format for all CoP name verification requests.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The unstructured format is valid for personal, business, and joint accounts. The full owner name string is populated in the third part.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The structured format is only valid for personal accounts. The salutation, forename(s), and surname are separated by commas.\")), mdx(Callout, {\n    colour: \"blue\",\n    mdxType: \"Callout\"\n  }, \"Commas must be included, if omitted, it may cause delays in receiving the outcome of the verification from the external participant.\"), mdx(\"p\", null, \"For reference, the following table gives examples of how the owner name should be formatted for different types of accounts:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Format\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Account type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Example\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Personal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John Andrew Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr John A Smith\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Business\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,ClearBank Ltd\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unstructured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Joint\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,John Smith and Jane MacDonald\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \",,Mr and Mrs J Smith\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Structured\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Personal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John, Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John Andrew, Smith\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Mr, John A, Smith\"))))), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Check payee account name\",\n    endpoints: [{\n      path: \"/open-banking/outbound/v1/name-verification\",\n      version: \"1.0.COP-Outbound\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Check whether a sort code/account number requires SRD\",\n    endpoints: [{\n      path: \"/open-banking/outbound/v1/srd/validate\",\n      version: \"1.0.COP-Outbound\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(\"h2\", null, \"CoPaaS onboarding\"), mdx(\"p\", null, \"As part of your onboarding journey for CoPaaS, you will need to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#get-csr-file\"\n  }, \"Get CSR file\"), \" endpoint to get the Certificate Signing Request (CSR) .csr file. The softwareStatementID and certificateType inputs are required. The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{softwareStatementId}\"), \" URL parameter is the unique ID of a CoP software statement on your Open Banking Directory entry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#create-a-new-certificate\"\n  }, \"Create a new certificate\"), \" endpoint to upload an X.509 certificate in a PEM .pem format. This is the signed PEM you can download from the Open Banking Directory after uploading the certificate signing request returned from the Get CSR file endpoint. Line breaks must be removed from the PEM before submission to ClearBank.\")), mdx(Callout, {\n    colour: \"blue\",\n    mdxType: \"Callout\"\n  }, \"These endpoints are only applicable if you are using CoPaaS.\"), mdx(\"p\", null, \"Once you have completed the onboarding set up, you can use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#cop-respond-inbound\"\n  }, \"CoP respond\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#cop-request-outbound\"\n  }, \"CoP request\"), \" endpoints in the usual way.\"), mdx(EndpointBlock, {\n    type: \"get\",\n    title: \"Get CSR file\",\n    endpoints: [{\n      path: \"/v1/softwarestatements/{softwareStatementId}/csr/{certificatetype}\",\n      version: \"1.0.CoPaaS\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }), mdx(EndpointBlock, {\n    type: \"post\",\n    title: \"Create a new certificate\",\n    endpoints: [{\n      path: \"/v1/softwarestatements/{softwareStatementId}/pem\",\n      version: \"1.0.CoPaaS\"\n    }],\n    mdxType: \"EndpointBlock\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"title":"Confirmation Of Payee (CoP)","slug":"/uk/docs/gbp-payments/confirmation-of-payee","order":7,"id":"30be2d1e-cd30-5293-b231-3e4908286555"}},"next":null,"previous":null}]}},"pageContext":{"id":"30be2d1e-cd30-5293-b231-3e4908286555","slug":"/uk/docs/gbp-payments/confirmation-of-payee","menuItems":[{"subMenuItems":[{"node":{"fields":{"id":"7a168da6-bc38-5440-b176-f42c0b24de3f","order":1,"slug":"/uk/docs/api/overview","title":"Overview"}}},{"node":{"fields":{"id":"859b63c5-1930-58d5-9ac6-61882093d0df","order":2,"slug":"/uk/docs/api/getting-started","title":"Getting started"}}},{"node":{"fields":{"id":"22010a92-6faa-5b42-94d3-70c37d5082e3","order":3,"slug":"/uk/docs/api/versioning","title":"Versioning"}}},{"node":{"fields":{"id":"42c4200d-0894-5be3-bc74-6877f2ee07b0","order":4,"slug":"/uk/docs/api/support-life-cycle","title":"Support life cycle"}}}],"menuItem":{"id":"ec4ec941-12c1-5547-a669-1ae245204b07","order":1,"slug":"/uk/docs/api","title":"API"}},{"subMenuItems":[{"node":{"fields":{"id":"c2c056d4-3a9a-5bd8-aa13-a1f30b6f105c","order":1,"slug":"/uk/docs/gbp-accounts/account-types","title":"Account types"}}},{"node":{"fields":{"id":"525bec44-6f3c-53f4-97e6-c420f0157fb9","order":2,"slug":"/uk/docs/gbp-accounts/manage-accounts","title":"Manage sterling accounts"}}},{"node":{"fields":{"id":"98f8d032-c639-5bb6-9338-b08ed3f547cc","order":3,"slug":"/uk/docs/gbp-accounts/payment-data","title":"Payment data"}}},{"node":{"fields":{"id":"78bb5565-27d0-5c21-93bd-e9359bc1ffe4","order":4,"slug":"/uk/docs/gbp-accounts/bacs-payment-data","title":"Bacs payment data"}}},{"node":{"fields":{"id":"160785da-d817-555e-bda9-4abd18615b48","order":5,"slug":"/uk/docs/gbp-accounts/account-reporting","title":"Account reporting"}}}],"menuItem":{"id":"70ec6e4d-3801-579a-907d-14cd1b52083c","order":2,"slug":"/uk/docs/gbp-accounts","title":"GBP Accounts"}},{"subMenuItems":[{"node":{"fields":{"id":"829bc38c-0e49-50eb-9f85-b6b3fa09c208","order":1,"slug":"/uk/docs/gbp-payments/faster-payments","title":"Faster payments"}}},{"node":{"fields":{"id":"d33204a9-ff11-5526-8854-e6087c0e4c1c","order":3,"slug":"/uk/docs/gbp-payments/bacs","title":"Bacs"}}},{"node":{"fields":{"id":"449adb66-181e-5523-8bd4-a6327e1491ac","order":4,"slug":"/uk/docs/gbp-payments/bacs-direct-debit-instructions","title":"Bacs Direct Debit Instructions"}}},{"node":{"fields":{"id":"99aea52d-4dc4-564f-8eb3-e01f5cf62210","order":5,"slug":"/uk/docs/gbp-payments/chaps","title":"CHAPS"}}},{"node":{"fields":{"id":"90ac9825-c603-5768-895e-005a573cd8a2","order":6,"slug":"/uk/docs/gbp-payments/cheques","title":"Cheques"}}},{"node":{"fields":{"id":"3f338887-7bb0-50a5-b9d5-cfc812c27712","order":6,"slug":"/uk/docs/gbp-payments/gbp-cross-border","title":"GBP Cross-Border"}}},{"node":{"fields":{"id":"30be2d1e-cd30-5293-b231-3e4908286555","order":7,"slug":"/uk/docs/gbp-payments/confirmation-of-payee","title":"Confirmation Of Payee (CoP)"}}}],"menuItem":{"id":"b83a982d-81f9-5ea6-b8ca-427da1920f1f","order":3,"slug":"/uk/docs/gbp-payments","title":"GBP Payments"}},{"subMenuItems":[{"node":{"fields":{"id":"df9de851-2360-5738-a606-429ef8f55976","order":1,"slug":"/uk/docs/multi-currency/multi-currency-account-types","title":"Multi-currency account types"}}},{"node":{"fields":{"id":"0a58cb96-6289-58d3-9db8-1a1b889ef3f8","order":2,"slug":"/uk/docs/multi-currency/manage-multi-currency-accounts","title":"Manage multi-currency accounts"}}},{"node":{"fields":{"id":"3d4cdf34-5750-52a9-8e25-6ba099010032","order":3,"slug":"/uk/docs/multi-currency/account-reporting","title":"Account reporting"}}},{"node":{"fields":{"id":"94b4b3d0-b6ee-5f70-bc71-93ce226e52b8","order":4,"slug":"/uk/docs/multi-currency/multi-currency-payments","title":"Multi-currency payments"}}},{"node":{"fields":{"id":"e9bce622-40bb-545a-82ef-513f647c12b2","order":5,"slug":"/uk/docs/multi-currency/fx-trade","title":"FX trade"}}},{"node":{"fields":{"id":"8aaf70c0-77b6-53f4-a612-fa2c5373081f","order":6,"slug":"/uk/docs/multi-currency/fx-trade-rfq","title":"FX trade (RFQ)"}}}],"menuItem":{"id":"95b0eaba-08ca-5b9c-9adf-5ace985def36","order":4,"slug":"/uk/docs/multi-currency","title":"Multi-currency/FX"}},{"subMenuItems":[{"node":{"fields":{"id":"9b3f1421-84b4-5404-897e-227c8706cb24","order":1,"slug":"/uk/docs/embedded-banking/retail-customers","title":"Retail customers"}}},{"node":{"fields":{"id":"71fc262d-a16a-558c-8bba-8dce2e0471e1","order":2,"slug":"/uk/docs/embedded-banking/savings-accounts","title":"Savings accounts"}}},{"node":{"fields":{"id":"d8b841a0-f5c6-538f-aa6d-da86fa697987","order":3,"slug":"/uk/docs/embedded-banking/flexible-cash-isa","title":"Flexible cash ISAs"}}}],"menuItem":{"id":"ade401be-f2cf-5091-bd79-f892267c8e78","order":5,"slug":"/uk/docs/embedded-banking","title":"Embedded Banking"}}],"regexFilter":"/uk/docs/gbp-payments/confirmation-of-payee"}},"staticQueryHashes":["501539297"]}